{"ast":null,"code":"/*!\r\n * (C) Ionic http://ionicframework.com - MIT License\r\n */\nimport { g as getCapacitor } from './capacitor-b4979570.js';\nvar ImpactStyle;\n(function (ImpactStyle) {\n  /**\r\n   * A collision between large, heavy user interface elements\r\n   *\r\n   * @since 1.0.0\r\n   */\n  ImpactStyle[\"Heavy\"] = \"HEAVY\";\n  /**\r\n   * A collision between moderately sized user interface elements\r\n   *\r\n   * @since 1.0.0\r\n   */\n  ImpactStyle[\"Medium\"] = \"MEDIUM\";\n  /**\r\n   * A collision between small, light user interface elements\r\n   *\r\n   * @since 1.0.0\r\n   */\n  ImpactStyle[\"Light\"] = \"LIGHT\";\n})(ImpactStyle || (ImpactStyle = {}));\nvar NotificationType;\n(function (NotificationType) {\n  /**\r\n   * A notification feedback type indicating that a task has completed successfully\r\n   *\r\n   * @since 1.0.0\r\n   */\n  NotificationType[\"Success\"] = \"SUCCESS\";\n  /**\r\n   * A notification feedback type indicating that a task has produced a warning\r\n   *\r\n   * @since 1.0.0\r\n   */\n  NotificationType[\"Warning\"] = \"WARNING\";\n  /**\r\n   * A notification feedback type indicating that a task has failed\r\n   *\r\n   * @since 1.0.0\r\n   */\n  NotificationType[\"Error\"] = \"ERROR\";\n})(NotificationType || (NotificationType = {}));\nconst HapticEngine = {\n  getEngine() {\n    const tapticEngine = window.TapticEngine;\n    if (tapticEngine) {\n      // Cordova\n      // TODO FW-4707 - Remove this in Ionic 8\n      return tapticEngine;\n    }\n    const capacitor = getCapacitor();\n    if (capacitor === null || capacitor === void 0 ? void 0 : capacitor.isPluginAvailable('Haptics')) {\n      // Capacitor\n      return capacitor.Plugins.Haptics;\n    }\n    return undefined;\n  },\n  available() {\n    const engine = this.getEngine();\n    if (!engine) {\n      return false;\n    }\n    const capacitor = getCapacitor();\n    /**\r\n     * Developers can manually import the\r\n     * Haptics plugin in their app which will cause\r\n     * getEngine to return the Haptics engine. However,\r\n     * the Haptics engine will throw an error if\r\n     * used in a web browser that does not support\r\n     * the Vibrate API. This check avoids that error\r\n     * if the browser does not support the Vibrate API.\r\n     */\n    if ((capacitor === null || capacitor === void 0 ? void 0 : capacitor.getPlatform()) === 'web') {\n      return typeof navigator !== 'undefined' && navigator.vibrate !== undefined;\n    }\n    return true;\n  },\n  isCordova() {\n    return window.TapticEngine !== undefined;\n  },\n  isCapacitor() {\n    return getCapacitor() !== undefined;\n  },\n  impact(options) {\n    const engine = this.getEngine();\n    if (!engine) {\n      return;\n    }\n    /**\r\n     * To provide backwards compatibility with Cordova apps,\r\n     * we convert the style to lowercase.\r\n     *\r\n     * TODO: FW-4707 - Remove this in Ionic 8\r\n     */\n    const style = this.isCapacitor() ? options.style : options.style.toLowerCase();\n    engine.impact({\n      style\n    });\n  },\n  notification(options) {\n    const engine = this.getEngine();\n    if (!engine) {\n      return;\n    }\n    /**\r\n     * To provide backwards compatibility with Cordova apps,\r\n     * we convert the style to lowercase.\r\n     *\r\n     * TODO: FW-4707 - Remove this in Ionic 8\r\n     */\n    const type = this.isCapacitor() ? options.type : options.type.toLowerCase();\n    engine.notification({\n      type\n    });\n  },\n  selection() {\n    /**\r\n     * To provide backwards compatibility with Cordova apps,\r\n     * we convert the style to lowercase.\r\n     *\r\n     * TODO: FW-4707 - Remove this in Ionic 8\r\n     */\n    const style = this.isCapacitor() ? ImpactStyle.Light : 'light';\n    this.impact({\n      style\n    });\n  },\n  selectionStart() {\n    const engine = this.getEngine();\n    if (!engine) {\n      return;\n    }\n    if (this.isCapacitor()) {\n      engine.selectionStart();\n    } else {\n      engine.gestureSelectionStart();\n    }\n  },\n  selectionChanged() {\n    const engine = this.getEngine();\n    if (!engine) {\n      return;\n    }\n    if (this.isCapacitor()) {\n      engine.selectionChanged();\n    } else {\n      engine.gestureSelectionChanged();\n    }\n  },\n  selectionEnd() {\n    const engine = this.getEngine();\n    if (!engine) {\n      return;\n    }\n    if (this.isCapacitor()) {\n      engine.selectionEnd();\n    } else {\n      engine.gestureSelectionEnd();\n    }\n  }\n};\n/**\r\n * Check to see if the Haptic Plugin is available\r\n * @return Returns `true` or false if the plugin is available\r\n */\nconst hapticAvailable = () => {\n  return HapticEngine.available();\n};\n/**\r\n * Trigger a selection changed haptic event. Good for one-time events\r\n * (not for gestures)\r\n */\nconst hapticSelection = () => {\n  hapticAvailable() && HapticEngine.selection();\n};\n/**\r\n * Tell the haptic engine that a gesture for a selection change is starting.\r\n */\nconst hapticSelectionStart = () => {\n  hapticAvailable() && HapticEngine.selectionStart();\n};\n/**\r\n * Tell the haptic engine that a selection changed during a gesture.\r\n */\nconst hapticSelectionChanged = () => {\n  hapticAvailable() && HapticEngine.selectionChanged();\n};\n/**\r\n * Tell the haptic engine we are done with a gesture. This needs to be\r\n * called lest resources are not properly recycled.\r\n */\nconst hapticSelectionEnd = () => {\n  hapticAvailable() && HapticEngine.selectionEnd();\n};\n/**\r\n * Use this to indicate success/failure/warning to the user.\r\n * options should be of the type `{ style: ImpactStyle.LIGHT }` (or `MEDIUM`/`HEAVY`)\r\n */\nconst hapticImpact = options => {\n  hapticAvailable() && HapticEngine.impact(options);\n};\nexport { ImpactStyle as I, hapticSelectionStart as a, hapticSelectionChanged as b, hapticSelection as c, hapticImpact as d, hapticSelectionEnd as h };","map":{"version":3,"names":["g","getCapacitor","ImpactStyle","NotificationType","HapticEngine","getEngine","tapticEngine","window","TapticEngine","capacitor","isPluginAvailable","Plugins","Haptics","undefined","available","engine","getPlatform","navigator","vibrate","isCordova","isCapacitor","impact","options","style","toLowerCase","notification","type","selection","Light","selectionStart","gestureSelectionStart","selectionChanged","gestureSelectionChanged","selectionEnd","gestureSelectionEnd","hapticAvailable","hapticSelection","hapticSelectionStart","hapticSelectionChanged","hapticSelectionEnd","hapticImpact","I","a","b","c","d","h"],"sources":["C:/Users/alarc/OneDrive/Escritorio/ProjectMovil/TellevoApp/node_modules/@ionic/core/dist/esm/haptic-6447af60.js"],"sourcesContent":["/*!\r\n * (C) Ionic http://ionicframework.com - MIT License\r\n */\r\nimport { g as getCapacitor } from './capacitor-b4979570.js';\r\n\r\nvar ImpactStyle;\r\n(function (ImpactStyle) {\r\n  /**\r\n   * A collision between large, heavy user interface elements\r\n   *\r\n   * @since 1.0.0\r\n   */\r\n  ImpactStyle[\"Heavy\"] = \"HEAVY\";\r\n  /**\r\n   * A collision between moderately sized user interface elements\r\n   *\r\n   * @since 1.0.0\r\n   */\r\n  ImpactStyle[\"Medium\"] = \"MEDIUM\";\r\n  /**\r\n   * A collision between small, light user interface elements\r\n   *\r\n   * @since 1.0.0\r\n   */\r\n  ImpactStyle[\"Light\"] = \"LIGHT\";\r\n})(ImpactStyle || (ImpactStyle = {}));\r\nvar NotificationType;\r\n(function (NotificationType) {\r\n  /**\r\n   * A notification feedback type indicating that a task has completed successfully\r\n   *\r\n   * @since 1.0.0\r\n   */\r\n  NotificationType[\"Success\"] = \"SUCCESS\";\r\n  /**\r\n   * A notification feedback type indicating that a task has produced a warning\r\n   *\r\n   * @since 1.0.0\r\n   */\r\n  NotificationType[\"Warning\"] = \"WARNING\";\r\n  /**\r\n   * A notification feedback type indicating that a task has failed\r\n   *\r\n   * @since 1.0.0\r\n   */\r\n  NotificationType[\"Error\"] = \"ERROR\";\r\n})(NotificationType || (NotificationType = {}));\r\nconst HapticEngine = {\r\n  getEngine() {\r\n    const tapticEngine = window.TapticEngine;\r\n    if (tapticEngine) {\r\n      // Cordova\r\n      // TODO FW-4707 - Remove this in Ionic 8\r\n      return tapticEngine;\r\n    }\r\n    const capacitor = getCapacitor();\r\n    if (capacitor === null || capacitor === void 0 ? void 0 : capacitor.isPluginAvailable('Haptics')) {\r\n      // Capacitor\r\n      return capacitor.Plugins.Haptics;\r\n    }\r\n    return undefined;\r\n  },\r\n  available() {\r\n    const engine = this.getEngine();\r\n    if (!engine) {\r\n      return false;\r\n    }\r\n    const capacitor = getCapacitor();\r\n    /**\r\n     * Developers can manually import the\r\n     * Haptics plugin in their app which will cause\r\n     * getEngine to return the Haptics engine. However,\r\n     * the Haptics engine will throw an error if\r\n     * used in a web browser that does not support\r\n     * the Vibrate API. This check avoids that error\r\n     * if the browser does not support the Vibrate API.\r\n     */\r\n    if ((capacitor === null || capacitor === void 0 ? void 0 : capacitor.getPlatform()) === 'web') {\r\n      return typeof navigator !== 'undefined' && navigator.vibrate !== undefined;\r\n    }\r\n    return true;\r\n  },\r\n  isCordova() {\r\n    return window.TapticEngine !== undefined;\r\n  },\r\n  isCapacitor() {\r\n    return getCapacitor() !== undefined;\r\n  },\r\n  impact(options) {\r\n    const engine = this.getEngine();\r\n    if (!engine) {\r\n      return;\r\n    }\r\n    /**\r\n     * To provide backwards compatibility with Cordova apps,\r\n     * we convert the style to lowercase.\r\n     *\r\n     * TODO: FW-4707 - Remove this in Ionic 8\r\n     */\r\n    const style = this.isCapacitor() ? options.style : options.style.toLowerCase();\r\n    engine.impact({ style });\r\n  },\r\n  notification(options) {\r\n    const engine = this.getEngine();\r\n    if (!engine) {\r\n      return;\r\n    }\r\n    /**\r\n     * To provide backwards compatibility with Cordova apps,\r\n     * we convert the style to lowercase.\r\n     *\r\n     * TODO: FW-4707 - Remove this in Ionic 8\r\n     */\r\n    const type = this.isCapacitor() ? options.type : options.type.toLowerCase();\r\n    engine.notification({ type });\r\n  },\r\n  selection() {\r\n    /**\r\n     * To provide backwards compatibility with Cordova apps,\r\n     * we convert the style to lowercase.\r\n     *\r\n     * TODO: FW-4707 - Remove this in Ionic 8\r\n     */\r\n    const style = this.isCapacitor() ? ImpactStyle.Light : 'light';\r\n    this.impact({ style });\r\n  },\r\n  selectionStart() {\r\n    const engine = this.getEngine();\r\n    if (!engine) {\r\n      return;\r\n    }\r\n    if (this.isCapacitor()) {\r\n      engine.selectionStart();\r\n    }\r\n    else {\r\n      engine.gestureSelectionStart();\r\n    }\r\n  },\r\n  selectionChanged() {\r\n    const engine = this.getEngine();\r\n    if (!engine) {\r\n      return;\r\n    }\r\n    if (this.isCapacitor()) {\r\n      engine.selectionChanged();\r\n    }\r\n    else {\r\n      engine.gestureSelectionChanged();\r\n    }\r\n  },\r\n  selectionEnd() {\r\n    const engine = this.getEngine();\r\n    if (!engine) {\r\n      return;\r\n    }\r\n    if (this.isCapacitor()) {\r\n      engine.selectionEnd();\r\n    }\r\n    else {\r\n      engine.gestureSelectionEnd();\r\n    }\r\n  },\r\n};\r\n/**\r\n * Check to see if the Haptic Plugin is available\r\n * @return Returns `true` or false if the plugin is available\r\n */\r\nconst hapticAvailable = () => {\r\n  return HapticEngine.available();\r\n};\r\n/**\r\n * Trigger a selection changed haptic event. Good for one-time events\r\n * (not for gestures)\r\n */\r\nconst hapticSelection = () => {\r\n  hapticAvailable() && HapticEngine.selection();\r\n};\r\n/**\r\n * Tell the haptic engine that a gesture for a selection change is starting.\r\n */\r\nconst hapticSelectionStart = () => {\r\n  hapticAvailable() && HapticEngine.selectionStart();\r\n};\r\n/**\r\n * Tell the haptic engine that a selection changed during a gesture.\r\n */\r\nconst hapticSelectionChanged = () => {\r\n  hapticAvailable() && HapticEngine.selectionChanged();\r\n};\r\n/**\r\n * Tell the haptic engine we are done with a gesture. This needs to be\r\n * called lest resources are not properly recycled.\r\n */\r\nconst hapticSelectionEnd = () => {\r\n  hapticAvailable() && HapticEngine.selectionEnd();\r\n};\r\n/**\r\n * Use this to indicate success/failure/warning to the user.\r\n * options should be of the type `{ style: ImpactStyle.LIGHT }` (or `MEDIUM`/`HEAVY`)\r\n */\r\nconst hapticImpact = (options) => {\r\n  hapticAvailable() && HapticEngine.impact(options);\r\n};\r\n\r\nexport { ImpactStyle as I, hapticSelectionStart as a, hapticSelectionChanged as b, hapticSelection as c, hapticImpact as d, hapticSelectionEnd as h };\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}